{% set cloudwatch_metric_stream_include_filter = cloudwatch_metric_stream_include_filter | safe_get([], []) %}
{% set alerting_settings = alerting_settings | safe_get([], {}) %}
{% set sla_alerting_settings = sla_alerting_settings | safe_get([], {}) %}
locals {
  secrets = read_terragrunt_config(find_in_parent_folders("secrets/monitoring/newrelic.hcl"))
  newrelic_integration = {
    enable_production_mode   = {{ newrelic_integration | safe_get(['enable_production_mode'], false) | lower }}
    enable_integration       = {{ newrelic_integration | safe_get(['enable_integration'], true) | lower }}
    enable_apm               = {{ newrelic_integration | safe_get(['enable_apm'], true) | lower }}
    license_key              = local.secrets.locals.newrelic_integration.license_key
    insights_key             = local.secrets.locals.newrelic_integration.insights_key
    api_key                  = local.secrets.locals.newrelic_integration.api_key
    newrelic_apm_license_key = local.secrets.locals.newrelic_integration.newrelic_apm_license_key
    account_id               = local.secrets.locals.newrelic_integration.account_id
    opsgenie_api_key         = local.secrets.locals.newrelic_integration.opsgenie_api_key
    newrelic_account_type    = "client"
  }

  # NewRelic customer's dedicated account
  newrelic_customer_account = {
    enable_integration       = {{ newrelic_customer_account | safe_get(['enable_integration'], true) | lower }}
    account_id               = local.secrets.locals.newrelic_customer_account.account_id
    license_key              = local.secrets.locals.newrelic_customer_account.license_key
  }

  newrelic_metrics_account_id = local.secrets.locals.newrelic_metrics_account_id
  newrelic_metrics_ingest_key = local.secrets.locals.newrelic_metrics_ingest_key

  aws_integration = {
    enabled                 = {{ aws_integration | safe_get(['enabled'], true) | lower }}
    role_name               = local.secrets.locals.aws_integration.role_name
    read_only_policy_arn    = local.secrets.locals.aws_integration.read_only_policy_arn
    newrelic_aws_account_id = local.secrets.locals.aws_integration.newrelic_aws_account_id
  }

  # List of AWS defaut metrics with proper naming convention
  # https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/aws-services-cloudwatch-metrics.html
  cloudwatch_metric_stream_include_filter = [
    "AWS/EC2",
    "AWS/ElastiCache",
    "AWS/RDS",
    "AWS/Lambda",
    "AWS/Billing",
    "AWS/EFS",
    "AWS/ES",
    "AWS/S3",
    "AWS/ECS"{% if cloudwatch_metric_stream_include_filter | length %}{{ ',' ~ '\n' }}{% else %}{{ '\n' }}{% endif %}
{% for item in cloudwatch_metric_stream_include_filter %}
    "{{ item }}"{% if not loop.last -%}{{ ',' ~ '\n' }}{% else %}{{ '\n' }}{%- endif %}
{% endfor %}
  ]

  # The URL can be found on: https://docs.newrelic.com/docs/infrastructure/amazon-integrations/aws-integrations-list/aws-metric-stream/#manual-setup
  # Typically, this changes based on your account region.
  #   - For accounts in US: https://aws-api.newrelic.com/cloudwatch-metrics/v1
  #   - For accounts in EU: https://aws-api.eu01.nr-data.net/cloudwatch-metrics/v1
  newrelic_collector_endpoint = "https://aws-api.newrelic.com/cloudwatch-metrics/v1"

  basic_auth = local.secrets.locals.basic_auth

  # currently used only for scheduler
  newrelic_agent_version = "{{ newrelic_agent_version | default("1.18.0", true) }}"
  {#todo: extends#}
  opsgenie_teams = {{ opsgenie_teams | default(["Spryker Cloud Operations"], true) | replace("'", '"') }}

  # List containing yves urls to test, like
  # [ https://www.messe.intersport.de", "https://www.vororder.intersport.de" ]
  synthetics_yves_urls = {{ synthetics_yves_urls | default(["https://CHANGE_ME!!!"], true) | replace("'", '"') }}

  # Example
  # enabled = false
  # yves    = ""
  # zed     = "https://cloud:cloud@zed.de.aldi-pltfrm-stage.cloud.spryker.toys/health-check"
  # glue    = "https://glue.de.aldi-pltfrm-stage.cloud.spryker.toys/health-check"
  synthetics_healthcheck_settings = {
    enabled = {{ synthetics_healthcheck_settings | safe_get(['enabled'], false) | lower }}
    yves    = "{{ synthetics_healthcheck_settings | safe_get(['yves'], "https://CHANGE_ME!!!") }}"
    zed     = "{{ synthetics_healthcheck_settings | safe_get(['zed'], "https://zed.CHANGE_ME!!!/health-check") }}"
    glue    = "{{ synthetics_healthcheck_settings | safe_get(['glue'], "https://glue.CHANGE_ME!!!/health-check") }}"
  }

  alerting_settings = {
    healthchecks = {
      enabled = false
    }
    alb_5xx_codes = {
      enabled = false
    }

    # RabbitMQ
    rabbitmq_availability = {
      enabled = false
    }
    rabbitmq_memory_alarm = {
      enabled = false
    }
    rabbitmq_disk_alarm = {
      enabled = false
    }
    rabbitmq_error_queue_grow = {
      enabled = false
    }
    rabbitmq_processing_speed = {
      enabled = false
    }
    rabbitmq_disk_space = {
      enabled = false
    }
    rabbitmq_memory = {
      enabled = false
    }

    # Jenkins
    jenkins_cpu_usage = {
      enabled = false
    }
    jenkins_memory_usage = {
      enabled = false
    }
    jenkins_disk_usage = {
      enabled = false
    }
    jenkins_failed_jobs = {
      enabled = false
    }
    jenkins_no_jobs_completed = {
      enabled = false
    }
    jenkins_dataimport_execution_time = {
      enabled = false
    }
    jenkins_inode_usage = {
      enabled = false
    }

    # RDS
    db_connections = {
      enabled = false
    }
    db_io_burst = {
      enabled = false
    }
    aurora_cpu_usage = {
      enabled = false
    }

    # Redis
    redis_status = {
      enabled = false
    }
    redis_out_of_space = {
      enabled = false
    }
    redis_cache_hit_rate = {
      enabled = false
    }

    # Elasticsearch
    elasticsearch_status_red = {
      enabled = false
    }
    #Ec2 Status check failed
    ec2_statusfailed_red = {
      enabled = false
    }

    #Ec2 CPU Credit Balance
    ec2_cpucredit_balance = {
      enabled = false
    }
{#{% alerting_settings | length %}#}
{% for name, item in alerting_settings.items() %}
    {{ name }} = {
      enabled = {{ item.get('enabled') | lower }}
    }
{% endfor %}
{#{% endif %}#}
  }

  sla_alerting_settings = {
    sl80_alerting_settings = {
      warning = {
        operator              = "below"
        threshold             = 99.50
        threshold_duration    = 360
        threshold_occurrences = "at_least_once"
      }
      critical = {
        operator              = "below"
        threshold             = 99.50
        threshold_duration    = 360
        threshold_occurrences = "ALL"
      }
    },
    sl81_alerting_settings = {
      warning = {
        operator              = "below"
        threshold             = 99.99
        threshold_duration    = 360
        threshold_occurrences = "at_least_once"
      }
      critical = {
        operator              = "below"
        threshold             = 99.80
        threshold_duration    = 360
        threshold_occurrences = "ALL"
      }
    },
    sl82_alerting_settings = {
      warning = {
        operator              = "below"
        threshold             = 99.95
        threshold_duration    = 360
        threshold_occurrences = "at_least_once"
      }
      critical = {
        operator              = "below"
        threshold             = 99.50
        threshold_duration    = 360
        threshold_occurrences = "ALL"
      }
    },
    sl83_alerting_settings = {
      warning = {
        operator              = "below"
        threshold             = 99.50
        threshold_duration    = 360
        threshold_occurrences = "at_least_once"
      }
      critical = {
        operator              = "below"
        threshold             = 99.50
        threshold_duration    = 360
        threshold_occurrences = "ALL"
      }
    },
    sl84_alerting_settings = {
      warning = {
        operator              = "below"
        threshold             = 99.95
        threshold_duration    = 360
        threshold_occurrences = "at_least_once"
      }
      critical = {
        operator              = "below"
        threshold             = 99.50
        threshold_duration    = 360
        threshold_occurrences = "ALL"
      }
    },
    sl86_alerting_settings = {
      warning = {
        operator              = "below"
        threshold             = 99.75
        threshold_duration    = 360
        threshold_occurrences = "at_least_once"
      }
      critical = {
        operator              = "below"
        threshold             = 99.50
        threshold_duration    = 360
        threshold_occurrences = "ALL"
      }
    },
    sl87_alerting_settings = {
      warning = {
        operator              = "below"
        threshold             = 99.75
        threshold_duration    = 360
        threshold_occurrences = "at_least_once"
      }
      critical = {
        operator              = "below"
        threshold             = 99.50
        threshold_duration    = 360
        threshold_occurrences = "ALL"
      }
    },
    frontend_availability = {
      warning = {
        operator              = "below"
        threshold             = 99.99
        threshold_duration    = 360
        threshold_occurrences = "at_least_once"
      }
      critical = {
        operator              = "below"
        threshold             = 99.98
        threshold_duration    = 360
        threshold_occurrences = "ALL"
      }
    }
    backend_availability = {
      warning = {
        operator              = "below"
        threshold             = 99.90
        threshold_duration    = 360
        threshold_occurrences = "at_least_once"
      }
      critical = {
        operator              = "below"
        threshold             = 99.95
        threshold_duration    = 360
        threshold_occurrences = "All"
      }
    }
    sl88_alerting_settings = {
      warning = {
        operator              = "below"
        threshold             = 99.75
        threshold_duration    = 360
        threshold_occurrences = "at_least_once"
      }
      critical = {
        operator              = "below"
        threshold             = 99.50
        threshold_duration    = 360
        threshold_occurrences = "ALL"
      }
    }
    sl89_alerting_settings = {
      warning = {
        operator              = "below"
        threshold             = 99.75
        threshold_duration    = 360
        threshold_occurrences = "at_least_once"
      }
      critical = {
        operator              = "below"
        threshold             = 99.50
        threshold_duration    = 360
        threshold_occurrences = "ALL"
      }
    }
    sl90_alerting_settings = {
      warning = {
        operator              = "below"
        threshold             = 99.75
        threshold_duration    = 360
        threshold_occurrences = "at_least_once"
      }
      critical = {
        operator              = "below"
        threshold             = 99.50
        threshold_duration    = 360
        threshold_occurrences = "ALL"
      }
    }
    sl91_alerting_settings = {
      warning = {
        operator              = "below"
        threshold             = 99.75
        threshold_duration    = 360
        threshold_occurrences = "at_least_once"
      }
      critical = {
        operator              = "below"
        threshold             = 99.50
        threshold_duration    = 360
        threshold_occurrences = "ALL"
      }
    },
    sl92_alerting_settings = {
      warning = {
        operator              = "below"
        threshold             = 99.95
        threshold_duration    = 360
        threshold_occurrences = "at_least_once"
      }
      critical = {
        operator              = "below"
        threshold             = 99.50
        threshold_duration    = 360
        threshold_occurrences = "ALL"
      }
    },
    sl93_alerting_settings = {
      warning = {
        operator              = "below"
        threshold             = 99.50
        threshold_duration    = 360
        threshold_occurrences = "at_least_once"
      }
      critical = {
        operator              = "below"
        threshold             = 99.50
        threshold_duration    = 360
        threshold_occurrences = "ALL"
      }
    },
    sl95_alerting_settings = {
      warning = {
        operator              = "below"
        threshold             = 99.99
        threshold_duration    = 360
        threshold_occurrences = "at_least_once"
      }
      critical = {
        operator              = "below"
        threshold             = 99.00
        threshold_duration    = 360
        threshold_occurrences = "ALL"
      }
    },
    sl96_alerting_settings = {
      warning = {
        operator              = "below"
        threshold             = 99.95
        threshold_duration    = 360
        threshold_occurrences = "at_least_once"
      }
      critical = {
        operator              = "below"
        threshold             = 99.50
        threshold_duration    = 360
        threshold_occurrences = "ALL"
      }
    },
    sl97_alerting_settings = {
      warning = {
        operator              = "below"
        threshold             = 99.95
        threshold_duration    = 360
        threshold_occurrences = "at_least_once"
      }
      critical = {
        operator              = "below"
        threshold             = 99.50
        threshold_duration    = 360
        threshold_occurrences = "ALL"
      }
    },
    sl98_alerting_settings = {
      warning = {
        operator              = "below"
        threshold             = 99.95
        threshold_duration    = 360
        threshold_occurrences = "at_least_once"
      }
      critical = {
        operator              = "below"
        threshold             = 99.50
        threshold_duration    = 360
        threshold_occurrences = "ALL"
      }
    },
    sl99_alerting_settings = {
      warning = {
        operator              = "below"
        threshold             = 99.95
        threshold_duration    = 360
        threshold_occurrences = "at_least_once"
      }
      critical = {
        operator              = "below"
        threshold             = 99.00
        threshold_duration    = 360
        threshold_occurrences = "ALL"
      }
    },
    sl59_alerting_settings = {
      warning = {
        operator              = "below"
        threshold             = 99.50
        threshold_duration    = 360
        threshold_occurrences = "at_least_once"
      }
      critical = {
        operator              = "below"
        threshold             = 97.00
        threshold_duration    = 360
        threshold_occurrences = "ALL"
      }
    }{% for name, item in sla_alerting_settings.items() %},
    {{ name }} = {
    {% if 'warning' in item %}
    {% set warning_data = item.get('warning') %}
      warning = {
        operator              = "{{ warning_data.get('operator') }}"
        threshold             = {{ warning_data.get('threshold') }}
        threshold_duration    = {{ warning_data.get('threshold_duration') }}
        threshold_occurrences = "{{ warning_data.get('threshold_occurrences') }}"
      }{% endif %}{% if 'critical' in item %},
      {% set critical_data = item.get('critical') %}
      critical = {
        operator              = "{{ critical_data.get('operator') }}"
        threshold             = {{ critical_data.get('threshold') }}
        threshold_duration    = {{ critical_data.get('threshold_duration') }}
        threshold_occurrences = "{{ critical_data.get('threshold_occurrences') }}"
      }
    {% endif %}
    }{% endfor %}

  }

  # ECS SETTINGS
{% set enable_nri_ecs = enable_nri_ecs if enable_nri_ecs is not none else true %}
  enable_nri_ecs               = {{ enable_nri_ecs | safe_get([], true) | lower }}
  nria_override_host_root      = "{{ nria_override_host_root | safe_get([], '/host') }}"
  nria_passthrough_environment = "{{ nria_passthrough_environment | safe_get([], 'ECS_CONTAINER_METADATA_URI,ENABLE_NRI_ECS') }}"
  nria_verbose                 = {{ nria_verbose | safe_get([], 0) }}

  # RABBITMQ MONITORING PARAMETERS
  rabbitmq_queues_regexes        = {{ rabbitmq_queues_regexes | default('\"[\\\".*\\\"]\"', true) }}
  rabbitmq_exchange_regexes      = {{ rabbitmq_exchange_regexes | default('\"[\\\".*\\\"]\"', true) }}
  rabbitmq_integrations_interval = {{ rabbitmq_integrations_interval | default('"15"', true) }}
}
